/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AppProductsRouteImport } from './routes/app/products'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'

const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppProductsRoute = AppProductsRouteImport.update({
  id: '/app/products',
  path: '/app/products',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/todos': typeof TodosRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/app/products': typeof AppProductsRoute
  '/auth/login': typeof AuthLoginRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/todos': typeof TodosRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/app/products': typeof AppProductsRoute
  '/auth/login': typeof AuthLoginRoute
  '/app': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/todos': typeof TodosRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/app/products': typeof AppProductsRoute
  '/auth/login': typeof AuthLoginRoute
  '/app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/todos'
    | '/admin/dashboard'
    | '/app/products'
    | '/auth/login'
    | '/app'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/todos'
    | '/admin/dashboard'
    | '/app/products'
    | '/auth/login'
    | '/app'
  id:
    | '__root__'
    | '/'
    | '/todos'
    | '/admin/dashboard'
    | '/app/products'
    | '/auth/login'
    | '/app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TodosRoute: typeof TodosRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AppProductsRoute: typeof AppProductsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AppIndexRoute: typeof AppIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/products': {
      id: '/app/products'
      path: '/app/products'
      fullPath: '/app/products'
      preLoaderRoute: typeof AppProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TodosRoute: TodosRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AppProductsRoute: AppProductsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AppIndexRoute: AppIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
